# Generated by Django 5.2.6 on 2025-09-20 23:20

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "icon",
                    models.CharField(
                        blank=True, help_text="CSS icon class or emoji", max_length=50
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        help_text="Hex color code for UI display",
                        max_length=7,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("sort_order", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategories",
                        to="content.category",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Categories",
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("is_approved", models.BooleanField(default=True)),
                ("is_flagged", models.BooleanField(default=False)),
                ("like_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="content_comments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="content.comment",
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="CommentModeration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("flagged", "Flagged"),
                            ("spam", "Marked as Spam"),
                            ("edited", "Edited"),
                        ],
                        max_length=20,
                    ),
                ),
                ("reason", models.TextField(blank=True)),
                (
                    "notes",
                    models.TextField(blank=True, help_text="Internal moderation notes"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "comment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="moderation_actions",
                        to="content.comment",
                    ),
                ),
                (
                    "moderator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="content_moderation_actions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CommentReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reason",
                    models.CharField(
                        choices=[
                            ("spam", "Spam"),
                            ("harassment", "Harassment"),
                            ("inappropriate", "Inappropriate Content"),
                            ("off_topic", "Off Topic"),
                            ("misinformation", "Misinformation"),
                            ("copyright", "Copyright Violation"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Additional details about the report"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("under_review", "Under Review"),
                            ("resolved", "Resolved"),
                            ("dismissed", "Dismissed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("resolution_notes", models.TextField(blank=True)),
                (
                    "comment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reports",
                        to="content.comment",
                    ),
                ),
                (
                    "reporter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="content_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="content_resolved_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(max_length=200, unique=True)),
                ("content", models.TextField()),
                (
                    "excerpt",
                    models.TextField(
                        blank=True,
                        help_text="Brief description for previews and SEO",
                        max_length=300,
                    ),
                ),
                (
                    "featured_image",
                    models.ImageField(
                        blank=True,
                        help_text="Main image for the post",
                        null=True,
                        upload_to="posts/",
                    ),
                ),
                (
                    "meta_description",
                    models.CharField(
                        blank=True, help_text="SEO meta description", max_length=160
                    ),
                ),
                (
                    "meta_keywords",
                    models.CharField(
                        blank=True,
                        help_text="SEO keywords (comma-separated)",
                        max_length=255,
                    ),
                ),
                ("view_count", models.PositiveIntegerField(default=0)),
                ("like_count", models.PositiveIntegerField(default=0)),
                ("comment_count", models.PositiveIntegerField(default=0)),
                ("is_featured", models.BooleanField(default=False)),
                ("allow_comments", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="content_posts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="posts",
                        to="content.category",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="comment",
            name="post",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comments",
                to="content.post",
            ),
        ),
        migrations.CreateModel(
            name="PostEngagement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "engagement_type",
                    models.CharField(
                        choices=[
                            ("like", "Like"),
                            ("bookmark", "Bookmark"),
                            ("share", "Share"),
                            ("view", "View"),
                        ],
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="engagements",
                        to="content.post",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PostStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "icon",
                    models.CharField(
                        blank=True, help_text="CSS icon class or emoji", max_length=50
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        help_text="Hex color code for UI display",
                        max_length=7,
                    ),
                ),
                (
                    "is_published",
                    models.BooleanField(
                        default=False,
                        help_text="Whether posts with this status are publicly visible",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("sort_order", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Post Status",
                "verbose_name_plural": "Post Statuses",
                "ordering": ["sort_order", "name"],
                "indexes": [
                    models.Index(
                        fields=["is_active", "sort_order"],
                        name="content_pos_is_acti_648cbd_idx",
                    ),
                    models.Index(
                        fields=["is_published"], name="content_pos_is_publ_07f582_idx"
                    ),
                ],
            },
        ),
        migrations.AddField(
            model_name="post",
            name="status",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="posts",
                to="content.poststatus",
            ),
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        help_text="Hex color code for UI display",
                        max_length=7,
                    ),
                ),
                ("usage_count", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["name"],
                "indexes": [
                    models.Index(
                        fields=["is_active"], name="content_tag_is_acti_806d32_idx"
                    ),
                    models.Index(
                        fields=["-usage_count"], name="content_tag_usage_c_161455_idx"
                    ),
                ],
            },
        ),
        migrations.AddField(
            model_name="post",
            name="tags",
            field=models.ManyToManyField(
                blank=True, related_name="posts", to="content.tag"
            ),
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True, help_text="Tell us about yourself", max_length=500
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        help_text="Profile picture",
                        null=True,
                        upload_to="avatars/",
                    ),
                ),
                (
                    "email_notifications",
                    models.BooleanField(
                        default=True, help_text="Receive email notifications"
                    ),
                ),
                (
                    "show_email_publicly",
                    models.BooleanField(
                        default=False, help_text="Display email address on profile"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="content_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Profile",
                "verbose_name_plural": "User Profiles",
            },
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["is_active", "sort_order"],
                name="content_cat_is_acti_59b16c_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["parent"], name="content_cat_parent__086262_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="commentmoderation",
            index=models.Index(
                fields=["comment"], name="content_com_comment_a5e260_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="commentmoderation",
            index=models.Index(
                fields=["moderator"], name="content_com_moderat_2ee837_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="commentmoderation",
            index=models.Index(fields=["action"], name="content_com_action_e2c64b_idx"),
        ),
        migrations.AddIndex(
            model_name="commentreport",
            index=models.Index(fields=["status"], name="content_com_status_ff77ae_idx"),
        ),
        migrations.AddIndex(
            model_name="commentreport",
            index=models.Index(fields=["reason"], name="content_com_reason_e9a405_idx"),
        ),
        migrations.AddIndex(
            model_name="commentreport",
            index=models.Index(
                fields=["-created_at"], name="content_com_created_8fdde1_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="commentreport",
            unique_together={("comment", "reporter")},
        ),
        migrations.AddIndex(
            model_name="comment",
            index=models.Index(
                fields=["post", "created_at"], name="content_com_post_id_a85ab9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="comment",
            index=models.Index(
                fields=["author"], name="content_com_author__a00d8f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="comment",
            index=models.Index(
                fields=["is_approved"], name="content_com_is_appr_d679d3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="comment",
            index=models.Index(
                fields=["parent"], name="content_com_parent__b3cec5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="postengagement",
            index=models.Index(
                fields=["post", "engagement_type"],
                name="content_pos_post_id_a0918e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="postengagement",
            index=models.Index(
                fields=["user", "engagement_type"],
                name="content_pos_user_id_a83023_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="postengagement",
            index=models.Index(
                fields=["-created_at"], name="content_pos_created_f81b67_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="postengagement",
            unique_together={("user", "post", "engagement_type")},
        ),
        migrations.AddIndex(
            model_name="post",
            index=models.Index(
                fields=["-created_at"], name="content_pos_created_415459_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="post",
            index=models.Index(
                fields=["status"], name="content_pos_status__62daec_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="post",
            index=models.Index(fields=["slug"], name="content_pos_slug_a791ce_idx"),
        ),
        migrations.AddIndex(
            model_name="post",
            index=models.Index(
                fields=["author"], name="content_pos_author__ebea4c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="post",
            index=models.Index(
                fields=["category"], name="content_pos_categor_092e2d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="post",
            index=models.Index(
                fields=["is_featured"], name="content_pos_is_feat_6111dd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="post",
            index=models.Index(
                fields=["-published_at"], name="content_pos_publish_a9bafe_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userprofile",
            index=models.Index(fields=["user"], name="content_use_user_id_71282b_idx"),
        ),
    ]
